package gocipher

import (
	"fmt"
	"testing"
)

func TestVigenere(t *testing.T) {
	text := "TKSYMWRJGHKBPTEIKCYRWXIELQUPSUTLLGYFIKYIAVFNRLQFKVVSMBMJOCZGILSEAPZRGCVVHTVQYKXJSHARVIPCOGHXGZCGLQNEEXLPDQVXWBLVKCTRSVXYWUORPNEJKVYBROGIQRABKZEGZAAJSMQRANLAGZCGLKVATZSUMEAFQICYSXLNPUSJLVORWIQVMULEMVXVJHHPIGIKGPLVWAITMTLJLQPVLJLBXPIIHGYZMBWVSXLFHZSGHKUTEKSDHCYVWWRTZCYGQICJMINRWBXYSVAJSXVFYTHZWPEMWUPZMTEIXGHGYZIJSNAUSCKYGPLUEAKRHKUTWMGLJKALLWPVKYOVPMXYWQAUIZHFWUUGEVIOHGYVIVGVVEYLTBSXJCWUIZGRFVLYPBLVVKMSIZIEUGZBGIRRLJPRJ"
	key := VigenereCrack(text, 8)
	v := NewVigenere(key)
	plain := v.Decrypt(text)
	fmt.Printf("key: %v\nplaintext: %s\n", key, plain)
	cipher := v.Encrypt(plain)
	if cipher != text {
		t.Errorf("roundtrip not equal: %s", cipher)
	}
}
